{
  "name": "Logique de Hoare",
  "tagline": "Par Thibaut Roperch et Pierre Granier--Richard",
  "body": "# Stage L3 Info\r\n\r\nVérificateur de preuves de programme en logique de Hoare\r\n\r\n## Fonctionnalités du projet\r\n\r\n* Définir le format du fichier contenant une preuve\r\n* Vérificateur de preuve\r\n    * Système à construire avec Lex et Yacc (.lex et .y, versions Flex et GNU Bison)\r\n    * Définir le langage d'une preuve d'après le format d'un fichier\r\n    * Vérifier la syntaxe des règles de Hoare d'une preuve\r\n    * Vérifier la sémantique des prédicats (pré et post conditions) d'une preuve\r\n* Assistant de création de preuve\r\n    * Interface graphique (IDE) à construire avec QT\r\n    * Générer un fichier contenant la preuve en respectant le format défini\r\n\r\n## Format d'une preuve\r\n\r\n### Règles de Hoare\r\n\r\nLes différentes règles de Hoare ([Wiki : Hoare](https://fr.wikipedia.org/wiki/Logique_de_Hoare \"Wiki Hoare\")) :\r\n* AFF : Affectation  \r\n![ADD](https://upload.wikimedia.org/math/0/b/9/0b9a2415175302dce994af21a9218367.png \"ADD\")\r\n* SEQ : Composition (ou séquence)  \r\n![SEQ](https://upload.wikimedia.org/math/a/6/f/a6f77b176903b2ee21016352ce1094b7.png \"SEQ\")\r\n* COND : Conditionnelle  \r\n![COND](https://upload.wikimedia.org/math/e/e/4/ee4f74d64cb71775ea181039c1634ac6.png \"COND\")\r\n* CONSEQ : Consequence (ou affaiblissement)  \r\n![CONSEQ](https://upload.wikimedia.org/math/e/7/4/e74a5e88893d68a24aa51b4f16f711f8.png \"CONSEQ\")\r\n* WHILE : Itération  \r\n![WHILE](https://upload.wikimedia.org/math/4/7/3/47393cfe477eaf8846db242ee9c818c5.png \"WHILE\")\r\n* WHILET : Correction totale  \r\n![WHILET](https://upload.wikimedia.org/math/3/a/5/3a559d4e19483b416de5a6fa94439d66.png \"WHILET\")\r\n\r\n### Construction d'une preuve (dans un IDE)\r\n\r\n* Comme dans le [cours de Courtieu (2008)](http://cedric.cnam.fr/~courtiep/downloads/hoare.pdf \"Outils de preuve et vérification - Courtieu, 2008\")\r\n* Construction de la preuve de bas en haut\r\n* Les prémisses sont en haut de la règle et la conclusion en bas\r\n\r\ntriplet1 ... tripletn  \r\n      triplet\r\n\r\n**{** précondition **}** variable **:=** valeur **{** postcondition **}** ... **{** précondition **}** variable **:=** valeur **{** postcondition **}**  \r\nNom de la règle ... Nom de la règle  \r\n**{** précondition **}** variable **:=** valeur **{** postcondition **}**\r\n\r\n### Génération d'une preuve (dans un fichier)\r\n\r\n* Sur une seule ligne\r\n* Les noms de règles utilisés comme des axiomes (ou fonctions)\r\n* Lecture de la preuve de bas en haut\r\n\r\nNom de la règle(**{** précondition **}** variable **:=** valeur **{** postcondition **}**, Nom de la règle( etc... ))  \r\nLe premier paramètre d'une règle étant la conclusion et les suivants les prémisses\r\n\r\n## Vérificateur de preuve\r\n\r\n### Langage\r\n\r\nTokens déjà présents dans les preuves :\r\n* `AFF` : une règle de Hoare d’arité 1 (ne contient qu'une conclusion, pas de prémisse)\r\n* `SEQ/COND/CONSEQ/WHILE/WHILET` : les règles de Hoare d'arité 2 (une conclusion puis une prémisse)\r\n\r\nTokens à définir :\r\n* `ACCOLADE_OUVRANTE` et `ACCOLADE_FERMANTE` respectivement **{** et **}** : les caractères encadrant un prédicat\r\n* `AFFECTATION` **:=** : le caractère d'affectation d'une valeur à une variable d'un programme\r\n* `POINTVIRGULE` **;** : le caractère séparant deux instructions d'un programme\r\n\r\nPrincipales règles à définir :\r\n* La règle `Regle` est composée au mois d'un token correspondant au nom d'une règle de Hoare (plus de détails plus loin)\r\n* La règle `Triplet` est composée d'une règle `Prédicat`, `Programme` et `Prédicat`\r\n* La règle `Prédicat` est composée de la règle `Conditions` entre les caractères **{** et **}**\r\n* La règle `Conditions` est un ensemble de règles `Condition` séparées par le caractère **;**\r\n* La règle `Condition` est composé d'une expression, d'un symbole de comparaison et d'une autre expression\r\n* La règle `Programme` est composée de règles `Instruction`\r\n* La règle `Instruction` est composée d'une variable, du symbole **:=** et d'une expression\r\n\r\n### Exemple\r\n\r\n`SEQ {...}a:=0;b:=0{...} AFF {...}a:=0{...} AFF {...}b:=0{...}`\r\nNote : les termes \"conclusion\" et \"premisse\" d'une règle de Hoare sont implicites : une conclusion est composée d'un triplet, et une premisse est composée d'une ou plusieurs règles de Hoare.\r\n\r\n### Terminaison des règles de Hoare\r\n\r\nLa règle `Regle` liste les cas des règles de Hoare à vérifier :\r\n* `AFF Triplet`\r\n    * Chaque prédicat du triplet doit être juste sémantiquement\r\n    * Le triplet doit être conforme syntaxiquement à la règle de Hoare `AFF`\r\n* `AFF Triplet AFF Triplet`\r\n    * *Mêmes choses que précédement*\r\n    * La postcondition (deuxième prédicat) du premier triplet doit être égale à la précondition (premier prédicat) du second triplet\r\n* `SEQ Triplet AFF Triplet AFF Triplet`\r\n    * *Mêmes choses que précédemment*\r\n    * La concaténation du programme des deux derniers triplets avec un **;** doivent être syntaxiquement équivalents au programme du premier triplet\r\n* *...*\r\n\r\n## Assistant de création de preuve\r\n\r\n*A étudier*\r\n*En Qt4 ou 5 ?*\r\n\r\n## Liens utiles\r\n\r\n* [Markdown](https://fr.wikipedia.org/wiki/Markdown \"Wiki Markdown\")\r\n* [Wiki : Hoare](https://fr.wikipedia.org/wiki/Logique_de_Hoare \"Wiki Hoare\")\r\n* [cours de Courtieu (2008)](http://cedric.cnam.fr/~courtiep/downloads/hoare.pdf \"Outils de preuve et vérification - Courtieu, 2008\")\r\n\r\n\r\n\r\n\r\n        \t\t\t\t\t\t\t\t\t\t\t **\r\n        \t\t\t\t\t\t\t\t\t\t\t /\\\r\n        \t\t\t\t\t\t\t\t\t\t    /**\\\r\n        \t\t\t\t\t\t\t\t\t\t   /*/\\*\\\r\n        \t\t\t\t\t\t\t\t\t\t  /*/**\\*\\\r\n        \t\t\t\t\t\t\t\t\t\t /*/*/\\*\\*\\\r\n        \t\t\t\t\t\t\t\t\t\t/*/*/**\\*\\*\\\r\n        \t\t\t\t\t\t\t\t\t   /*/*/*/\\*\\*\\*\\\r\n        \t\t\t\t\t\t\t\t\t  /*/*/*/**\\*\\*\\*\\\r\n        \t\t\t\t\t\t\t\t\t /*/*/*/*/\\*\\*\\*\\*\\\r\n        \t\t\t\t\t\t\t\t\t/*/*/*/*/**\\*\\*\\*\\*\\\r\n        \t\t\t\t\t\t\t\t   /*/*/*/*/*/\\*\\*\\*\\*\\*\\\r\n        \t\t\t      \t\t\t\t  /*/*/*/*/*/**\\*\\*\\*\\*\\*\\\r\n        \t\t\t\t\t\t\t\t /*/*/*/*/*/*/\\*\\*\\*\\*\\*\\*\\\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}